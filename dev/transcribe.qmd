## Process a single file

We process below the viral [demo](https://twitter.com/deepfates/status/1769963585503941068) of the potent [worldsim](https://twitter.com/karan4d/status/1768836844207378463).

```python
from catalog.workflow import Library
from catalog.media import Audio, Video
library = Library()

file_path = "data/samples/worldsim.mp4"
file = library.import_media_object(file_path, Video)
print(file.get_details())

```


```py
from catalog.process import transcribe

prompt="Glossary: ChatGPT, OpenAI, Claude 3, Anthropic, worldsim, Command Loom Interface"
transcribe(file, batch_size=4, initial_prompt=prompt)
transcript_data = file.transcripts[0]
```


### Format

```python
import json
import re
def format_transcript(transcript_data, sensitivity=0.5):
    for segment in transcript_data['nodes']:
      segment['content'] = re.sub(r'^\s+', '', re.sub(r'\s+$', '', segment['content']))

    chunks = [segment['content'] for segment in transcript_data['nodes']]
    start_times = [segment['start'] for segment in transcript_data['nodes']]
    end_times = [segment['end'] for segment in transcript_data['nodes']]
    
    pauses = [start_times[i] - end_times[i-1] for i in range(1, len(start_times))]
    min_pause = min(pauses)
    max_pause = max(pauses)
    threshold = min_pause + (max_pause - min_pause) * sensitivity
    
    result = ""
    for i in range(len(chunks)):
        result += chunks[i]
        if i < len(chunks) - 1:
            pause = start_times[i+1] - end_times[i]
            if pause < threshold:
                result += " "
            else:
                result += "\n\n"
    
    return result

text = format_transcript(transcript_data, sensitivity=0.10)
print(text)
```

