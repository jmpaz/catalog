```python
from icloudpy import ICloudPyService

def read_secrets(filename="secrets.txt"):
    secrets = {}
    with open(filename, "r") as file:
        for line in file:
            key, value = line.strip().split("=", 1)
            secrets[key] = value
    return secrets

secrets = read_secrets()
api = ICloudPyService(secrets["icloud_username"], secrets["icloud_password"])
```

```python
if api.requires_2fa:
    code = input("Enter the code you received on one of your approved devices to log in: ")
    result = api.validate_2fa_code(code)
    if not result:
        print("Failed to verify security code.")
    else:
        if not api.is_trusted_session:
            print("Session is not trusted. Requesting trust...")
            result = api.trust_session()
            if not result:
                print("Failed to request trust.")
else:
    print("No 2FA required; logging in...")
```

```python
def list_directory_contents(drive_node, path=""):
    """Recursively lists the contents of a specified path in iCloud Drive, correctly handling files and directories."""
    current_node = drive_node
    if path:  # If a path is specified, navigate to it
        parts = path.split('/')
        for part in parts:
            if hasattr(current_node, 'dir') and part in current_node.dir():
                current_node = current_node[part]
            else:
                print(f"Path or file '{path}' not found.")
                return

    if hasattr(current_node, 'dir'):  # Check if current_node is a directory
        contents = current_node.dir()
        if contents is None:  # Handle the case where dir() returns None
            # print(f"{path} is a file, not a directory.")
            return
        for item in contents:
            item_path = f"{path}/{item}" if path else item
            print(item_path)
            list_directory_contents(current_node, item)
    else:
        print(f"{path} (file)")  # Handle file case directly
```

```python
# Ensure we are at the root of iCloud Drive
drive_root = api.drive

# Specify the initial path you want to list the contents of
initial_path = "Just Press Record"

# List the directory contents
list_directory_contents(drive_root, initial_path)
```
